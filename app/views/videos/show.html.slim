#player-container
  #player

/* comment.time will be added before sending. */
- @new_comment.player_id = 1 # [TODO]
== form_for(@new_comment, remote: true) do |c|
  == c.text_field :text
  == c.hidden_field :video_id
  == c.hidden_field :player_id
  == c.submit "コメント", class: "btn"
  
javascript:
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '300',
      width: '400',
      videoId: "#{@video.youtube_video_id}",
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.
  var done = false;
  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING && !done) {
      setTimeout(stopVideo, 6000);
      done = true;
    }
  }
  function stopVideo() {
    player.stopVideo();
  }

/ iframe width="420" height="315" src="//www.youtube.com/embed/#{@video.youtube_video_id}?autoplay=1" frameborder="0" allowfullscreen