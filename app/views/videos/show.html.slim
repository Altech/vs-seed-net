.data-title
  h1
    a.white href=event_path(@game.event) #{@game.event.held_at.strftime("%Y年%m月%d日")}
    == " Vol.#{@game.index_of_event + 1}"

#player

== render partial: 'video_nav',  locals: {video: @video}

== render partial: 'video_info', locals: {video: @video, type: :viewpoint}
== render partial: 'video_info', locals: {video: @video.partners_video, type: :partner} if @video.partners_video

javascript:
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var player;
  function onYouTubeIframeAPIReady() {
    var width;
    if (isPC())
      width = parseInt($(window).width()) - 2*pcShowPadding;
    if (width >= 1050)
      width = 1050;
    player = new YT.Player('player', {
      width: width,
      height: (width/16.0)*9,
      videoId: "#{@video.youtube_video_id}"
    });
  }
  // onYouTubeIframeAPIReady is not called if IFrameAPI is cached. So we must call explicitly.
  try{ onYouTubeIframeAPIReady() }catch(e){}

  var isPlayerModal = false

  setVideoEditEvents()
