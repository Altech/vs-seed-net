#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# This is a tool to import data generated by https://github.com/Altech/renza-publisher
# Please use via rails runner.

require 'pry'
require 'aws-sdk'

abort "Please specify data directory." if not ARGV.first
dir = Pathname.new ARGV.first
abort "The directory was not found." if not dir.exist?


videos = Dir.entries(dir).select{|e| e =~ /\d\d_.+\.mp4/}

nico_video_ids = {
  1 => 'sm24412796',
  2 => 'sm24412872',
  3 => 'sm24412906',
  4 => 'sm24412954',
  5 => 'sm24413038',
  6 => 'sm24413063',
  7 => 'sm24413091',
  8 => 'sm24413118',
  9 => 'sm24413133',
  10 => 'sm24413152',
  11 => 'sm24413176',
  12 => 'sm24413202',
  13 => 'sm24413223',
  14 => 'sm24413260',
  15 => 'sm24413293',
  16 => 'sm24413304',
  17 => 'sm24414554',
  18 => 'sm24414584',
  19 => 'sm24414604',
  20 => 'sm24414632',
  21 => 'sm24414671',
  22 => 'sm24414768',
  23 => 'sm24414865',
  24 => 'sm24414931',
  25 => 'sm24414968',
  26 => 'sm24415040',
  27 => 'sm24415128',
  28 => 'sm24415156',
  29 => 'sm24415187',
  30 => 'sm24415217',
  31 => 'sm24415253',
  32 => 'sm24415282',
  33 => 'sm24415319',
  34 => 'sm24415350',
  35 => 'sm24415397',
  36 => 'sm24415442',
  37 => 'sm24487544',
  38 => 'sm24487678',
  39 => 'sm24487741',
  40 => 'sm24487793',
  41 => 'sm24487894',
  42 => 'sm24487972',
  43 => 'sm24488057',
  44 => 'sm24488138',
  45 => 'sm24488203',
  46 => 'sm24488260',
  47 => 'sm24488359',
  48 => 'sm24488405',
  49 => 'sm24488429',
  50 => 'sm24488462',
  51 => 'sm24488512',
  52 => 'sm24488561'
}

begin
  ActiveRecord::Base.transaction do
    puts "GameCenter"

    # GameCenter
    game_center = GameCenter.where(location: '池袋ランブルプラザ').first

    puts "Event"
    # Event
    time = Time.parse('2014-08-16 15:00:00')
    event = if Event.where(held_at: time, game_center_id: game_center.id).exists?
              Event.where(held_at: time, game_center_id: game_center.id).first
            else
              event_record = {
                held_at: time,
                game_center_id: game_center.id
              }
              Event.create!(event_record)
            end

    puts "Video"
    # Video
    %w[a1].each do |seat|
      puts "seat:#{seat}"
      nico_video_ids.each do |n,video_id|
        i = n - 1
        puts "index_in_the_seat:#{i}"
        video = if Video.where(nico_video_id: video_id).exists?
                  Video.where(nico_video_id: video_id).first
                else
                  video_record = {
                    nico_video_id: video_id
                  }
                  Video.create!(video_record)
                end

        game = if Game.where(event_id: event.id, index_of_event: i).exists?
                 Game.where(event_id: event.id, index_of_event: i).first
               else
                 Game.new(event_id: event.id, index_of_event: i)
               end
        game["#{seat}_video_id".to_sym] = video.id
        game.save

        next if seat != 'a1'

        # Thumbnail
        s3 = AWS::S3.new(YAML.load(File.read "#{Rails.root}/config/s3.yml")[Rails.env])
        bucket_name = "vs-seed-production" # 書き換えた
        file_name = sprintf("%02d.jpg", n)
        unless s3.buckets.map(&:name).include? bucket_name
          s3.buckets.create bucket_name
        end
        bucket = s3.buckets[bucket_name]
        object = bucket.objects["videos/thumbnails/#{game.id}/original.jpg"]
        object.write(Pathname.new(dir + file_name), acl: :public_read) # [TODO] use Altech/renza-publisher
        game.thumbnail_file_name = file_name
        game.thumbnail_content_type = 'image/jpeg'
        game.thumbnail_file_size = File.size(dir + file_name)
        game.thumbnail_updated_at = Time.now
        game.save
      end
    end
  end
rescue => e
  puts <<MSG
All changes except GameCenter was rollbacked.
Thumbnails on the S3 bucket was not rollbacked.
MSG
  puts e.inspect
  puts e.backtrace
  binding.pry
end
